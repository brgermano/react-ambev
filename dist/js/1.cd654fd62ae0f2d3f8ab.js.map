{"version":3,"sources":["webpack:///./src/components/prod-card/style.scss?dfba","webpack:///./src/components/prod-card/style.scss","webpack:///./src/common/qql-queries/query-prod.js","webpack:///./src/components/prod-card/prod-card.jsx"],"names":["content","__webpack_require__","module","i","options","hmr","transform","insertInto","undefined","locals","exports","push","gql","_templateObject","graphql","fetchPlaces","props","variables","id","search","categoryId","_useState2","_slicedToArray","useState","productsQtt","dataproducts","setDataproducts","handleProductQttChange","increase","currQtt","productsView","product","productId","inventoryItemId","currProductQtt","react_default","a","createElement","key","className","title","src","imageUrl","alt","price","onClick","type","disabled","value","productsArray","data","Fragment","poc","products","reduce","arr","next","concat","productVariants","map"],"mappings":"4EACA,IAAAA,EAAcC,EAAQ,IAEtB,iBAAAD,MAAA,EAA4CE,EAAAC,EAASH,EAAA,MAOrD,IAAAI,EAAA,CAAeC,KAAA,EAEfC,eAPAA,EAQAC,gBAAAC,GAEaP,EAAQ,GAARA,CAA8DD,EAAAI,GAE3EJ,EAAAS,SAAAP,EAAAQ,QAAAV,EAAAS,6BCjBAP,EAAAQ,QAA2BT,EAAQ,GAARA,EAA8D,IAEzFU,KAAA,CAAcT,EAAAC,EAAS,4jCAA0jC,iiBCAlkCS,eAAfC,6ZCuEeC,sBAAQC,EAAa,CAClCX,QAAS,SAAAY,GAAK,MAAK,CACjBC,UAAW,CACTC,GAAIF,EAAME,GACVC,OAAQ,GACRC,WAAY,MALHN,CApEE,SAAAE,GAAS,IAAAK,EAAAC,EACgBC,mBAAS,CAAEC,YAAa,KADxC,GACjBC,EADiBJ,EAAA,GACHK,EADGL,EAAA,GAUxB,SAASM,EAAuBT,EAAIU,GAClC,UAAMC,EAAUJ,EAAaD,YAAYN,IAAO,EAGhDQ,EAAgB,CACdF,eAAW,KACRN,IAJUU,EAAWC,EAAU,EAAIA,EAAU,oGASpD,SAASC,EAAaC,GAAS,IACrBP,EAAgBC,EAAhBD,YACFQ,EAAYP,EAAaQ,gBACzBC,EAAiBV,EAAYQ,GAEnC,OACEG,EAAAC,EAAAC,cAAA,OAAKC,IAAKN,EAAWO,UAAU,QAC7BJ,EAAAC,EAAAC,cAAA,SAAOE,UAAU,SAASR,EAAQS,OAClCL,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACbJ,EAAAC,EAAAC,cAAA,OAAKI,IAAKV,EAAQW,SAAUC,IAAI,cAElCR,EAAAC,EAAAC,cAAA,SAAOE,UAAU,SAAjB,MAA6BR,EAAQa,OACrCT,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACbJ,EAAAC,EAAAC,cAAA,UACEQ,QAAS,kBAAMlB,EAAuBK,GAAW,IACjDc,KAAK,SACLC,UAAWb,GAHb,KAOAC,EAAAC,EAAAC,cAAA,SAAOW,MAAOd,GAAkB,IAEhCC,EAAAC,EAAAC,cAAA,UACEQ,QAAS,kBAAMlB,EAAuBK,GAAW,IACjDc,KAAK,UAFP,OA3CgB,IAGFG,EAmDdC,EAASlC,EAATkC,KACR,OACEf,EAAAC,EAAAC,cAAAF,EAAAC,EAAAe,SAAA,KACEhB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACZW,EAAKE,KAvDUH,EAwDCC,EAAKE,IAAIC,SAvDvBJ,EAAcK,OACnB,SAACC,EAAKC,GAAN,OAAeD,EAAIE,OAAOD,EAAKE,kBAC/B,KAqDsCC,IAAI,SAAAlC,GAAY,OAC9CK,EAAaL,KAEf","file":"js/1.cd654fd62ae0f2d3f8ab.js","sourcesContent":["\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js!./style.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js!./style.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js!./style.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".products-wrapper .card{min-width:330px;max-width:330px;min-height:400px;max-height:430px;display:inline-block;align-items:center;margin:10px;padding:0px;border:1px solid #dcdcdc;vertical-align:bottom;border-radius:4px}.products-wrapper .card .image-holder img{width:230px;display:block;margin-left:auto;margin-right:auto}.products-wrapper .card label.title{margin:10px 0px 10px 0px;font-size:22px;min-height:45px;display:block;text-align:center;font-weight:bold}.products-wrapper .card label.price{text-align:center;font-size:30px;margin:10px 0px 10px 0px;font-weight:bold;display:block}.products-wrapper .card .counter-holder button{border-radius:4px;font-size:32px;height:60px;width:60px;margin:5px;background:#ffc800;color:black;border:none;cursor:pointer}.products-wrapper .card .counter-holder button:disabled{background:none;border:1px solid red}.products-wrapper .card .counter-holder input{border:1px solid #e0e0e0;width:55%;height:52px;border-radius:4px;vertical-align:super;text-align:center}.products-wrapper .name{text-transform:uppercase;font-size:21px;color:white}\\n\", \"\"]);\n","import gql from \"graphql-tag\";\n\nexport default gql`\n  query pocCategorySearch($id: ID!, $search: String!, $categoryId: Int!) {\n    poc(id: $id) {\n      products(categoryId: $categoryId, search: $search) {\n        productVariants {\n          title\n          description\n          imageUrl\n          price\n        }\n      }\n    }\n  }\n`;\n","import React, { useState } from \"react\";\nimport { graphql } from \"react-apollo\";\nimport fetchPlaces from \"../../common/qql-queries/query-prod\";\nimport \"./style.scss\";\n\nconst ProdCard = props => {\n  const [dataproducts, setDataproducts] = useState({ productsQtt: {} });\n\n  function joinProducts(productsArray) {\n    return productsArray.reduce(\n      (arr, next) => arr.concat(next.productVariants),\n      []\n    );\n  }\n\n  function handleProductQttChange(id, increase) {\n    const currQtt = dataproducts.productsQtt[id] || 0;\n    const newQtt = increase ? currQtt + 1 : currQtt - 1;\n\n    setDataproducts({\n      productsQtt: {\n        [id]: newQtt\n      }\n    });\n  }\n\n  function productsView(product) {\n    const { productsQtt } = dataproducts;\n    const productId = dataproducts.inventoryItemId;\n    const currProductQtt = productsQtt[productId];\n\n    return (\n      <div key={productId} className=\"card\">\n        <label className=\"title\">{product.title}</label>\n        <div className=\"image-holder\">\n          <img src={product.imageUrl} alt=\"erro-img\" />\n        </div>\n        <label className=\"price\">R$ {product.price}</label>\n        <div className=\"counter-holder\">\n          <button\n            onClick={() => handleProductQttChange(productId, false)}\n            type=\"button\"\n            disabled={!currProductQtt}\n          >\n            -\n          </button>\n          <input value={currProductQtt || 0} />\n\n          <button\n            onClick={() => handleProductQttChange(productId, true)}\n            type=\"button\"\n          >\n            +\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  const { data } = props;\n  return (\n    <>\n      <div className=\"products-wrapper\">\n        {data.poc\n          ? joinProducts(data.poc.products).map(dataproducts =>\n              productsView(dataproducts)\n            )\n          : null}\n      </div>\n    </>\n  );\n};\n\nexport default graphql(fetchPlaces, {\n  options: props => ({\n    variables: {\n      id: props.id,\n      search: \"\",\n      categoryId: 0\n    }\n  })\n})(ProdCard);\n"],"sourceRoot":""}